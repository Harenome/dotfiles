"==============================================================================
" Harenome's .vimrc file
" Maintainer: Harenome Ranaivoarivony Razanajato <harno.ranaivo@gmail.com>
"
" See 'https://github.com/harenome/dotfiles' for the latest version. (Well,
" the last version I pushed...)
"==============================================================================

" If something is not commented, try ':h option'.
" Folds will automatically open and close themselves as you move in and out.
" If this bothers you, type 'zi' to open all folds.

"" No compatibility with legacy vi {{{
    " This must be first, as it changes other options.
    set nocompatible
"}}}

"" Plugins {{{
    " Install vim-plug (https://github.com/junegunn/vim-plug), then run
    "     :PlugUpdate()

    " vim-plug
    call plug#begin('~/.local/share/vim/vim-plug')

    " Easier Vim
    Plug 'fholgado/minibufexpl.vim'
    Plug 'scrooloose/nerdtree'
    Plug 'kien/ctrlp.vim'
    Plug 'mbbill/undotree'
    Plug 'terryma/vim-expand-region'

    " Colorschemes
    Plug 'Harenome/vim-colors-rhinestones', { 'branch': 'newcolors' }

    " Git utilities
    Plug 'tpope/vim-fugitive'
    Plug 'airblade/vim-gitgutter'

    " Syntax files
    Plug 'Harenome/vim-mipssyntax', { 'for': 'mips' }
    Plug 'dag/vim-fish', { 'for': 'fish' }

    " Pandoc
    Plug 'vim-pandoc/vim-pandoc', { 'for': [ 'md', 'markdown' ] }
    Plug 'vim-pandoc/vim-pandoc-syntax', { 'for': [ 'md', 'markdown' ] }

    " Tmux
    Plug 'tpope/vim-tbone'

    " Misceallenous
    Plug 'xolox/vim-misc' | Plug 'xolox/vim-easytags'
    Plug 'Harenome/vim-neatfoldtext'
    Plug 'oblitum/rainbow'
    Plug 'tpope/vim-surround'
    Plug 'sickill/vim-pasta'
    Plug 'tpope/vim-repeat'
    Plug 'ap/vim-css-color'
    Plug 'ervandew/supertab'
    Plug 'majutsushi/tagbar'
    Plug 'vim-scripts/a.vim'
    Plug 'scrooloose/syntastic'
    Plug 'tpope/vim-commentary'
    Plug 'tpope/vim-dispatch'

    call plug#end()
"}}}

"" Shell {{{
    set shell=/bin/bash
"}}}

"" Man plugin {{{
    runtime ftplugin/man.vim
"}}}

"" Basics {{{
    set mouse=a
    set showmode
    set ruler
    set scrolloff=999

    " Display incomplete commands.
    set showcmd

    " Hit <C-D> to see a list of available commands.
    set wildmenu

    " Load file type plugins + indentation.
    filetype plugin indent on

    " New leader key (the default is "\", which is unconvenient on french azerty
    " keyboards).
    let mapleader=","
    let maplocalleader="ù"

    " Hides buffers instead of closing them.
    set hidden
"}}}

"" Syntax highlighting {{{
    syntax on
    colorscheme rhinestones-dark
    set t_Co=256
    set showmatch
"}}}

"" Line numbers {{{
    set number
    " Previous way to switch between relativenumber and number, before I found
    " 'numbers'. I might switch back since I don't use the 'numbers' plugin's
    " automatic trigger.
    "let g:switchednumber = 0
    "function! SwitchLineNumber()
    "    if g:switchednumber == 0
    "        let g:switchednumber = 1
    "        set relativenumber
    "    else
    "        let g:switchednumber = 0
    "        set number
    "    endif
    "endfunction
    "map <S-space> :call SwitchLineNumber()<CR>
"}}}

"" Status line {{{
    " Always show status.
    set laststatus=2

    " Source statusline config file
    "source ~/.vim/config/statusline_rc.vim
"}}}

"" Indenting {{{
    " A tab is 4 spaces.
    set tabstop=4
    set shiftwidth=4
    set shiftround

    "" Use spaces, not tabs
    set expandtab
    set smarttab
    set autoindent
    set smartindent
    set copyindent
"}}}

"" Searching {{{
    " Hihglight matches.
    set hlsearch
    " Incremental searching.
    set incsearch
    " Searches are case insensitive...
    set ignorecase
    " ...unless they contain at least one capital letter.
    set smartcase
"}}}

"" Tabs {{{
    " <S-t>: new tab
    " <A-j>: left tab
    " <A-k>: right tab
    map <S-t> :tabnew<CR>
    noremap <A-j> gT
    noremap <A-k> gt
"}}}

"" Windows {{{
    map <C-k> <C-w>k
    map <C-l> <C-w>l
    map <C-h> <C-w>h
    map <C-j> <C-w>j
"}}}

"" Line wrapping {{{
    set wrap linebreak showbreak=↪
    " Move inside of the current line when wrapped, instead of moving to the next
    " true line.
    nnoremap j gj
    nnoremap k gk
"}}}

"" Mappings for times when <Esc> and <BS> are too far away. {{{
    inoremap <C-b> <BS>
    inoremap <C-c> <Esc>
"}}}

"" Listchars {{{
    set list lcs=trail:·,tab:»·
"}}}

"" Folding {{{
    " Enable folding, za to (un)fold.
    set foldmethod=syntax
    " Maximum folds for the "indent" and "syntax" methods.
    set foldnestmax=5
    " Open a fold when moving into it, close it when moving out of it.
    set foldopen=all foldclose=all
    " Hit <space> to (un)fold everything.
    nnoremap <space> zi
    " Folding bonus.
    autocmd InsertEnter * setlocal foldclose=""
    autocmd InsertLeave * setlocal foldclose=all
"}}}

"" Omni-completion {{{
    if executable('ctags')
        map <F9> :!ctags -f .tags --fields=+l --c-kinds=+p --c++-kinds=+p -R .<CR><CR>
    endif
    set tags+=.tags,./.tags,../.tags,tags,./tags,../tags
    set ofu=syntaxcomplete#Complete
"}}}

"" Highlight the limit columns, the current line and the current column {{{
    set cul cuc colorcolumn=72,80
"}}}

"" Lazy redraw {{{
    set lazyredraw
"}}}

"" Selection lasts after indenting {{{
    vmap > >gv
    vmap < <gv
"}}}

"" Paths {{{
    set path+=include/
    set path+=src/
    set path+=headers/
    set path+=sources/
"}}}

"" Swap and undo {{{
    " First ensure ~/.local/share/vim/{undo,swp} exist.
    set dir=~/.local/share/vim/swp
    if version >= 703
        set undodir=~/.local/share/vim/undo
        set undofile
    endif
"}}}

"" Plugin configuration {{{
    source ~/.vim/config/plugins_rc.vim
"}}}

"" Special settings for this file.
" vim:ft=vim:fdm=marker:ff=unix:foldopen=all:foldclose=all
